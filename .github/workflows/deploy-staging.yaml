name: Build and deploy to staging when pull request is created

on:
  pull_request:
    branches:
      # - master
      - never

jobs:
  setup-build-publish-deploy:
    name: Setup, build, publish, deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Package with maven
        run: mvn clean package --no-transfer-progress -DskipTests

      - name: Build Docker image with tags
        run: docker build -f Dockerfile.prod . -t eu.gcr.io/digdir-fdk-infra/a-backend-service:$GITHUB_SHA -t eu.gcr.io/digdir-fdk-infra/a-backend-service:staging_latest

      - name: Run tests
        run: mvn -DtestImageName="eu.gcr.io/digdir-fdk-infra/a-backend-service:staging_latest" verify --no-transfer-progress

      - name: Publish docker image to Google Cloud
        run: docker -- push eu.gcr.io/digdir-fdk-infra/a-backend-service:$GITHUB_SHA

      - name: Apply Helm template
        uses: stefanprodan/kube-tools@v1
        with:
          helm: 2.14.3
          command: |
            helm init --client-only
            helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
            helm fetch --untar --untardir ./helm fdk/a-backend-service
            helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/a-backend-service:$GITHUB_SHA" -f ./helm/a-backend-service/values/staging.yaml ./helm/a-backend-service/ > ./kubectlapply.yaml
            cat ./kubectlapply.yaml
            chmod o+w ./kubectlapply.yaml
            cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          project_id: digdir-fdk-dev
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-dev

      - name: Deploy to staging
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Deploy a-backend-service to staging'
          fields: repo,message,commit,author,ref,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()